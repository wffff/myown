buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
        postgresqlVersion = '9.4.1212'
        alibabaFastJsonVersion = '1.2.39'
        jsoupVersion = '1.10.2'
        springGradleVersion = '0.0.9.RELEASE'
        javaxMailVersion = '1.4.1'
        javaXmlBindVersion = '2.2.11'
        springOauth2Version = '2.2.1.RELEASE'
        commonLang = '3.7'
        pinyin4jVersion = '2+'
        thymeleafExtrasVersion = '3+'
        nekohtmlVersion = '1.9.22'
        alibabaDruidVersion = '1.1.9'
        lombokVersion = '1.18.0'
        mongodbVERSION = '3.2.2'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.wanggoudan'
version = '0.0.1'
sourceCompatibility = 1.10

repositories {
    mavenCentral()
}


dependencies {
    compile("org.glassfish.jaxb:jaxb-runtime:${javaXmlBindVersion}", //#解决因java9模块化产生的找不到类的异常
            "org.glassfish.jaxb:jaxb-xjc:${javaXmlBindVersion}", //#解决因java9模块化产生的找不到类的异常
            "org.glassfish.jaxb:jaxb-core:${javaXmlBindVersion}", //#解决因java9模块化产生的找不到类的异常
            "org.jsoup:jsoup:${jsoupVersion}",
            "com.alibaba:fastjson:${alibabaFastJsonVersion}",
            "org.postgresql:postgresql:${postgresqlVersion}",
            "org.apache.commons:commons-lang3:${commonLang}",
            "com.belerweb:pinyin4j:${pinyin4jVersion}", // 中文拼音
            "com.alibaba:druid-spring-boot-starter:${alibabaDruidVersion}",
            "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-security:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-web-services:${springBootVersion}",
            "org.thymeleaf.extras:thymeleaf-extras-springsecurity4:${thymeleafExtrasVersion}",
            "org.postgresql:postgresql:${postgresqlVersion}",
            "org.mongodb:mongo-java-driver:${mongodbVERSION}",
    )
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
}
